{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/services/jira.rest.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"table {\\r\\n    border: 1px solid black;\\r\\n }\\r\\n\\r\\n td,th{\\r\\n    border-right: 1px solid black;\\r\\n    width: 200px;\\r\\n    padding:5px 0;\\r\\n    text-align: center;\\r\\n }\\r\\n\\r\\n th{\\r\\n   font:bold\\r\\n }\\r\\n\\r\\n tr{\\r\\n     border-bottom: 1px solid black;\\r\\n }\\r\\n\\r\\n .issueTextArea {\\r\\n    color: black;\\r\\n    background-color: lightgray;\\r\\n    line-height: normal;\\r\\n    height: 50px;\\r\\n    width: 400px;\\r\\n    margin: 0;\\r\\n }\\r\\n\"","module.exports = \"\\n<div style=\\\"height:50px\\\" >\\n  MSTeam Board\\n</div>\\n<table>\\n    <tr>\\n        <th>\\n          Type\\n        </th>\\n        <th>\\n          Key\\n        </th>\\n        <th>\\n          Summary\\n        </th>\\n        <th>\\n            Assignee\\n        </th>\\n        <th>\\n          Reporter\\n        </th>\\n        <th>\\n          Priority\\n        </th>\\n        <th>\\n          Status\\n        </th>\\n        <th>\\n          Created\\n        </th>\\n        <th>Updated</th>\\n    </tr>\\n    <tr *ngFor=\\\"let issue of jiraIssues\\\" (click)=\\\"setTaskDetails(issue)\\\"  data-toggle=\\\"modal\\\" data-target=\\\"#taskDetails\\\" style=\\\"cursor: pointer;\\\" >\\n     <td>\\n       <ng-container *ngIf=\\\"issue.fields.issuetype.name =='Task'\\\">\\n          <img src=\\\"https://msteamsjira.atlassian.net/secure/viewavatar?size=xsmall&amp;avatarId=10318&amp;avatarType=issuetype\\\"\\n          height=\\\"16\\\" width=\\\"16\\\" border=\\\"0\\\" align=\\\"absmiddle\\\" alt=\\\"Task\\\" title=\\\"Task - A task that needs to be done.\\\">\\n       </ng-container>\\n       <ng-container *ngIf=\\\"issue.fields.issuetype.name=='Bug'\\\">\\n          <img src=\\\"https://msteamsjira.atlassian.net/secure/viewavatar?size=xsmall&amp;avatarId=10303&amp;avatarType=issuetype\\\" \\n          height=\\\"16\\\" width=\\\"16\\\" border=\\\"0\\\" align=\\\"absmiddle\\\" alt=\\\"Bug\\\" title=\\\"Bug - A problem which impairs or prevents the functions of the product.\\\">\\n       </ng-container>\\n    </td>\\n     <td>\\n      {{issue.key}}\\n     </td>\\n     <td>\\n      {{issue.fields.summary}} \\n     </td>\\n     <td>\\n       {{issue?.fields?.assignee?.displayName}}\\n     </td>\\n     <td>\\n      {{issue.fields.reporter.displayName}}\\n     </td>\\n     <td>\\n      <ng-container *ngIf=\\\"issue.fields.priority.name=='Medium'\\\">\\n          <img src=\\\"https://msteamsjira.atlassian.net/images/icons/priorities/medium.svg\\\" height=\\\"16\\\" width=\\\"16\\\"\\n          border=\\\"0\\\" align=\\\"absmiddle\\\" alt=\\\"Medium\\\" title=\\\"Medium - Has the potential to affect progress.\\\">\\n      </ng-container>\\n      <ng-container *ngIf=\\\"issue.fields.priority.name=='High'\\\">\\n          <img src=\\\"https://msteamsjira.atlassian.net/images/icons/priorities/high.svg\\\" height=\\\"16\\\" width=\\\"16\\\" \\n          border=\\\"0\\\" align=\\\"absmiddle\\\" alt=\\\"High\\\" title=\\\"High - Serious problem that could block progress.\\\">\\n      </ng-container>\\n      <ng-container *ngIf=\\\"issue.fields.priority.name=='Highest'\\\">\\n          <img src=\\\"https://msteamsjira.atlassian.net/images/icons/priorities/highest.svg\\\" height=\\\"16\\\" width=\\\"16\\\"\\n           border=\\\"0\\\" align=\\\"absmiddle\\\" alt=\\\"Highest\\\" title=\\\"Highest - This problem will block progress.\\\">\\n      </ng-container>\\n      <ng-container *ngIf=\\\"issue.fields.priority.name=='Low'\\\">\\n          <img src=\\\"https://msteamsjira.atlassian.net/images/icons/priorities/low.svg\\\" height=\\\"16\\\" width=\\\"16\\\" \\n          border=\\\"0\\\" align=\\\"absmiddle\\\" alt=\\\"Low\\\" title=\\\"Low - Minor problem or easily worked around.\\\">\\n      </ng-container>\\n      <ng-container *ngIf=\\\"issue.fields.priority.name=='Lowest'\\\">\\n          <img src=\\\"https://msteamsjira.atlassian.net/images/icons/priorities/lowest.svg\\\" height=\\\"16\\\" width=\\\"16\\\" \\n          border=\\\"0\\\" align=\\\"absmiddle\\\" alt=\\\"Lowest\\\" title=\\\"Lowest - Trivial problem with little or no impact on progress.\\\">\\n      </ng-container>\\n     </td>\\n     <td>\\n       <button style=\\\"padding:2px 20px;background-color: white;border:1px solid cadetblue;color:cadetblue;font: bold;\\\"\\n      > {{issue.fields.status.name}}</button>\\n     </td>\\n     <td>\\n      {{issue.fields.created | date:'short'}}\\n     <td>\\n      {{issue.fields.updated | date:'short'}}\\n     </td>\\n    </tr>\\n</table>\\n<div class=\\\"modal fade\\\" role =\\\"dialog\\\" id=\\\"taskDetails\\\">\\n  <div class=\\\"modal-dialog\\\" >\\n    <div class=\\\"modal-content\\\">\\n     <div class=\\\"modal-header\\\">\\n       <h6> \\n          <ng-container *ngIf=\\\"issueType =='Task'\\\">\\n              <img src=\\\"https://msteamsjira.atlassian.net/secure/viewavatar?size=xsmall&amp;avatarId=10318&amp;avatarType=issuetype\\\"\\n              height=\\\"16\\\" width=\\\"16\\\" border=\\\"0\\\" align=\\\"absmiddle\\\" alt=\\\"Task\\\" title=\\\"Task - A task that needs to be done.\\\">\\n           </ng-container>\\n           <ng-container *ngIf=\\\"issueType=='Bug'\\\">\\n              <img src=\\\"https://msteamsjira.atlassian.net/secure/viewavatar?size=xsmall&amp;avatarId=10303&amp;avatarType=issuetype\\\" \\n              height=\\\"16\\\" width=\\\"16\\\" border=\\\"0\\\" align=\\\"absmiddle\\\" alt=\\\"Bug\\\" title=\\\"Bug - A problem which impairs or prevents the functions of the product.\\\">\\n           </ng-container>\\n           \\n           {{taskId}}\\n          </h6>\\n       <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)=\\\"updateIssue()\\\">&times;</button>\\n     </div>\\n     <div class=\\\"modal-body\\\">\\n        <div style=\\\"font-weight: bold\\\">\\n          Summary\\n        </div>\\n        <textarea class=\\\"issueTextArea\\\" [(ngModel)]=\\\"taskSummary\\\"></textarea>\\n        <div style=\\\"font-weight: bold\\\">\\n          Description\\n        </div>\\n        <textarea class=\\\"issueTextArea\\\" [(ngModel)]=\\\"taskDescription\\\"></textarea>\\n      \\n     </div>\\n     <div style=\\\"height:50px;\\\">\\n\\n     </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\nimport { JiraRestService } from './services/jira.rest.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n  jiraIssues:any;\n  taskId:string;\n  taskSummary:string;\n  taskDescription:string;\n  issueType:string;\n  currentTask:any;\n\n  constructor(private jirsRest:JiraRestService){\n\n  }\n\n  ngOnInit(){\n    this.getDashboardData();\n  }\n\n  getDashboardData(){\n    this.jirsRest.getJiraDashboard().subscribe(\n      data=>{\n        this.jiraIssues=data[\"issues\"];\n        console.log(data[\"issues\"]);\n      },\n      error=> console.log(error)\n    )\n  }\n\n  setTaskDetails(task:any){\n   this.currentTask=task;\n   this.taskId= task.key;\n   this.taskSummary=task.fields.summary;\n   this.taskDescription=task.fields.description;\n   this.issueType= task.fields.issuetype.name;\n  }\n\n  updateIssue(){\n    var fields= {\n      \"fields\": {\n          \"summary\":this.taskSummary,\n          \"description\":this.taskDescription\n      }\n   };\n    this.jirsRest.updateJiraIssue(fields,this.currentTask.id).subscribe((resposne)=>{\n      console.log(resposne);\n    });\n    this.getDashboardData();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport{HttpClientModule} from '@angular/common/http';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport{HttpClient,HttpHeaders, HttpErrorResponse} from '@angular/common/http';\nimport { Observable, EMPTY, throwError, observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JiraRestService {\n  \n  constructor(private httpClient:HttpClient) {\n\n   }\n\n   getJiraDashboard(){\n      //let url =\"https://msteamsjira.atlassian.net/rest/api/2/search?jql=assignee=currentuser()\";\n      let url =\"https://msteamsjira.atlassian.net/rest/api/2/search?jql=project=MSTEAM\";\n      let headers = new HttpHeaders({'Content-Type':  'application/json',\n      'Authorization': 'Basic YXBzbWFnZWxsYW46VGVzbGEhMTIz'});\n      return this.httpClient.get(url,{headers});\n   }\n\n   updateJiraIssue(fields:any,issueId:string){\n    let url =\"https://msteamsjira.atlassian.net/rest/api/2/issue/\" + issueId ;\n    let headers = new HttpHeaders({'Content-Type':  'application/json',\n    'Authorization': 'Basic YXBzbWFnZWxsYW46VGVzbGEhMTIz'});\n    return this.httpClient.put(url,fields,{headers});\n   }\n\n   private handleError(errorResponse:HttpErrorResponse){\n    if(errorResponse.error instanceof ErrorEvent){\n      console.error('Client Side error: ', errorResponse.error.message)\n    }else{console.error('Server Side error: ', errorResponse)}\n   }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}